services:
  api:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - app-network
  sqlServer:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlServer
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=AVerySecret&SafePassword
    volumes:
      - sqlServerData:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'AVerySecret&SafePassword' -Q 'SELECT 1' || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - app-network

volumes:
  sqlServerData:

networks:
  app-network:
    driver: bridge

  